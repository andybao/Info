* 第一章 正则表达式入门
** Egrep元字符
*** 行的开始和结束
- 脱字符号 ^ 代表一行的开始
- 美元符号 $ 代表一行的结束
- 这两个符号匹配的都是位置，而不是具体的字符
*** 字符组 [...]
**** 匹配若干字符之一
- e匹配e a匹配a [ea]匹配e或者a
- Eg: gr[ea]y 匹配 grey 或者 gray
- Eg: [Ss]mith <H[123456]>
**** 字符组元字符'-'
- '-'在字符组中表示范围：H<1-6>与H[123456]一样
- [0-9]和[a-z]是常用的匹配数字和小写字母的简便方式
- 字符组的多重范围：[0123456789abcdefABCDEF] = [0-9a-fA-F]
- 字符组也可以加符号：[0-9A-Z_!.?]
**** 排除型字符组 [^...]
- 匹配任何不包括在排除型字符组中的字符
- Eg:[^1-6] 匹配除了123456以外任何字符
*** 用点号匹配任意字符
- Eg:'03.19.76'匹配'03/19/76'和'03-19-76'
*** 多选结构
**** 匹配任意子表达式
- '|'表示或
- Eg: 'Bob|Robert'匹配Bob或Robert
- 在上面的组合中，子表达式称为多选分支
- Eg: 'gr[ea]y' = 'gr(e|a)y' 注意方括号和括号
**** 多选结构和字符组的区别
- 字符组只能匹配文本中的单个字符
- 多选结构可以匹配任意长度的文本
- Eg: '^(From|Subject|Date): '匹配以From: /Subject: /Date: 开头的文本
*** 忽略大小写
- grep -i 参数忽略大小写
*** 单词分界符
**** 元字符序列
- '\<'和'\>'分别匹配单词的开头和结束位置
- Eg: '\<cat' 匹配以cat开头的单词
*** 可选项元素
- '?'表示可选项，对紧邻的左侧元素有效
- Eg: 'colou?r'匹配'color'和'colour'
- 'u?'表示u可有可没有
- Eg: '4(th)?'匹配'4'和'4th'
*** 其他量词：重复出现
- '+'表示紧邻的左侧元素出现一次或多次
- '*'表示紧邻的左侧元素出现任意多次，或者不出现
- '?''+''*'统称为量词
