* 第二章 求值实践 (Practicing Evaluation)
**** 1. 每当在Emacs Lisp中发出一个编辑命令时，比如移动光标，就是在对一个表达式求值
**** 2. 键入普通文本是对Emacs Lisp函数self-insert-command求值
**** 3. 通过键入键序列进行求值的函数被称为交互函数，或者是命令
- 如果使一个函数变成交互函数：参见3.3节“使函数称为交互函数”
** 2.1 缓冲区名 (Buffer Names)
**** 1. buffer-name和buffer-file-name
- 对(buffer-name)求值，返回当前缓冲区名称，通常与文件名相同
- 对(buffer-file-name)求值，返回文件完整的路径名
- 文件记录在硬盘上，缓冲区包含从文件拷贝的信息，对缓冲区的修改不会影响文件，除非保存缓冲区
#+BEGIN_SRC lisp
(buffer-name) -> "2_Practicing_Evaluation.org"
(buffer-file-name) -> "/Users/andybao/Info/andy-lisp/2_Practicing_Evaluation.org"
#+END_SRC
**** 2. Lisp中nil表示空值，布尔代数的假，空列表()的同义语
**** 3. C-u C-x C-e
- 表达式的值出现在缓冲区（相对于C-x C-e 值出现在回显区）
** 2.2 获得缓冲区 (Getting Buffers)
**** 1. 函数current-buffer
- (buffer-name)返回缓冲区的名字
- (current-buffer)返回缓冲区本身，即缓冲区对象（实体）
#+BEGIN_SRC lisp
(current-buffer) -> #<buffer 2_Practicing_Evaluation.org>
#+END_SRC
**** 2. 函数other-buffer
- 返回最近使用过的缓冲区
#+BEGIN_SRC lisp
(other-buffer) -> #<buffer *Messages*>
#+END_SRC
** 2.3 切换缓冲区 (Switching Buffers)
**** 1. 函数switch-to-buffer
- C-x b会将当前窗格切换至其它缓冲区，以下为其调用的表达式
#+BEGIN_SRC lisp
(switch-to-buffer (other-buffer)) -> #<buffer *Messages*> 
#+END_SRC
**** 2. 函数set-buffer
- 将焦点切换到另一个缓冲区，但不在屏幕上显示
** 2.4 缓冲区大小和位点的定位 (Buffer Size and the Location of Point)
**** 1. 函数buffer-size返回当前缓冲区的大小，即字符数的统计
#+BEGIN_SRC lisp
(buffer-size) -> 1284
#+END_SRC
**** 2. 光标所在位置称为point
- (point)返回当前光标所在位置，即从当前缓冲区首字符到光标所在位置间的字符数
- (point-min)返回当前缓冲区位点最小可能值
- (piont-max)返回当前缓冲区位点最大可能值，即缓冲区总字符数
#+BEGIN_SRC lisp
(point) -> 1461
(point-min) -> 1
(point-max) -> 1509
#+END_SRC
